---
import WidgetWrapper from '#/components/ui/WidgetWrapper.astro';
import Layout from '#/layouts/PageLayout.astro';
import Headline from '#/components/ui/Headline.astro';
import Blockquote from '#/components/widgets/Blockquote.astro';
import { Image } from 'astro:assets';

import { keynotes } from '#/data/keynotes';
---
<Layout
  metadata={{
    title: 'Keynotes'
  }}
  heroProps={{
    title: 'Keynotes',
    subtitle: 'In the tradition of our conference series, BPM 2025 features three outstanding keynotes with different perspectives on business process management.'
  }}>
  {keynotes.map((k, index) => {
    const isPar = index === 0 || index % 2 === 0;
    const imageLayout = (
      <div
        class="speaker-gradient lg:absolute lg:w-[38%]"
        class:list={{
          'lg:left-0 lg:inset-0 gradient-left': isPar,
          'lg:right-0 lg:top-0 lg:bottom-0 gradient-right': !isPar
        }}>
        <Image
          class="h-full w-full object-cover"
          class:list={[k.imageClass]}
          src={k.image}
          alt={k.name} />
      </div>
    );
    const descriptionLayout = (
      <div
        class="min-w-[60%] p-4 lg:p-0"
        class:list={{
          'lg:ml-[40%]': isPar,
          'lg:mr-[40%]': !isPar
        }}>
        <Blockquote>
          <Fragment set:html={k.description} />
        </Blockquote>
      </div>
    );
    return (
      <WidgetWrapper
        containerClass="lg:mx-0 flex flex-col min-w-full"
        bg={isPar}>
        <Headline
          title={k.name}
          subtitle={k.subtitle}
          classes={{
            container: 'max-w-xl sm:mx-auto lg:max-w-2xl',
            title: 'text-4xl md:text-5xl font-bold tracking-tighter mb-4 font-heading',
            subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400'
          }}
        />
        <div class="w-full flex flex-col items-center justify-between lg:flex-row">
          {isPar
            ? (
                <>
                  {imageLayout}
                  {descriptionLayout}
                </>
              )
            : (
                <>
                  {descriptionLayout}
                  {imageLayout}
                </>
              )}
        </div>
      </WidgetWrapper>
    );
  })}
</Layout>

<style>
:global(.dark) .speaker-gradient {
  --bg-color: var(--aw-color-bg-page-dark);
}

@media (min-width: 1024px) {
  .speaker-gradient {
    /* TODO: Check why dark:[--bg-color:var(--aw-color-bg-page-dark)] [--bg-color:theme(colors.blue.50)] classes does not work */
    --bg-color: 239 246 255;
    --gradient-steps:
      rgb(var(--bg-color) / 0) 0%,
      rgb(var(--bg-color) / 0.182) 5.6%,
      rgb(var(--bg-color) / 0.34) 9.9%,
      rgb(var(--bg-color) / 0.476) 13.1%,
      rgb(var(--bg-color) / 0.593) 15.7%,
      rgb(var(--bg-color) / 0.69) 17.9%,
      rgb(var(--bg-color) / 0.771) 20.2%,
      rgb(var(--bg-color) / 0.836) 22.9%,
      rgb(var(--bg-color) / 0.888) 26.3%,
      rgb(var(--bg-color) / 0.927) 30.8%,
      rgb(var(--bg-color) / 0.956) 36.7%,
      rgb(var(--bg-color) / 0.976) 44.4%,
      rgb(var(--bg-color) / 0.989) 54.3%,
      rgb(var(--bg-color) / 0.996) 66.6%,
      rgb(var(--bg-color) / 0.999) 81.7%,
      rgb(var(--bg-color) / 1) 100%;
  }
  .speaker-gradient.gradient-left {
    mask-image: linear-gradient(
      to left,
      var(--gradient-steps)
    )
  }

  .speaker-gradient.gradient-right {
    mask-image: linear-gradient(
      to right,
      var(--gradient-steps)
    )
  }
}
</style>
