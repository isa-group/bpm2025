---
import type { Form as Props } from '#/types';
import Button from '#/components/ui/Button/Button.astro';

const {
  inputs,
  textarea,
  disclaimers,
  button = { text: 'Submit' },
  description = '',
  formProps = {}
} = Astro.props;
---

<form {...formProps}>
  {
    inputs
    && inputs.map(
      input =>
        input.name && (
          <div class="mb-6">
            {input.label && (
              <label for={input.name} class="block text-sm font-medium">
                <Fragment set:html={input.label} />
                {input.required && (
                  <span class="text-red-500" aria-hidden="true">*</span>
                )}
              </label>
            )}
            <input
              autocomplete={input.autocomplete ?? 'on'}
              {...input}
              class="text-md block w-full border border-gray-200 rounded-lg bg-white px-4 py-3 dark:border-gray-700 dark:bg-slate-900"
            />
          </div>
        )
    )
  }

  {
    textarea && (
      <div>
        {textarea.label && (
          <label for="textarea" class="block text-sm font-medium">
            <Fragment set:html={textarea.label} />
            {textarea.required && (
              <span class="text-red-500" aria-hidden="true">*</span>
            )}
          </label>
        )}
        <textarea
          id="textarea"
          rows={textarea.rows ?? 4}
          {...textarea}
          class="text-md block w-full border border-gray-200 rounded-lg bg-white px-4 py-3 dark:border-gray-700 dark:bg-slate-900"
        />
      </div>
    )
  }

  {
    disclaimers?.length && disclaimers.map(d => (
      <div class="mt-3 flex items-start">
        <div class="mt-0.5 flex">
          <input
            {...d}
            type="checkbox"
            class="text-md mt-1 block w-full cursor-pointer border border-gray-200 rounded-lg bg-white px-4 py-3 dark:border-gray-700 dark:bg-slate-900"
          />
        </div>
        <div class="ml-3">
          {d.label && (
            <label for={d.id} class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
              <Fragment set:html={d.label} />
              {d.required && (
                <span class="text-red-500" aria-hidden="true">*</span>
              )}
            </label>
          )}
        </div>
      </div>
    ))
  }

  {
    button && (
      <div class="grid mt-10">
        <Button variant="primary" type="submit" {...button} />
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>
