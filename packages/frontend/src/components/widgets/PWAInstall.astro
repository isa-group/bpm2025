---
// This component handles PWA install prompt functionality
---

<div id="pwa-install-prompt" class="hidden bottom-4 right-4 fixed z-50">
  <div class="p-4 border border-gray-200 rounded-lg bg-white max-w-sm shadow-lg dark:border-gray-700 dark:bg-gray-800">
    <div class="flex items-center space-x-3">
      <div class="flex-shrink-0">
        <svg class="text-blue-500 h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
        </svg>
      </div>
      <div class="flex-1">
        <p class="text-sm text-gray-900 font-medium dark:text-gray-100">Install BPM 2025</p>
        <p class="text-xs text-gray-500 dark:text-gray-400">Add to home screen for quick access</p>
      </div>
    </div>
    <div class="mt-3 flex space-x-2">
      <button
        id="pwa-install-button"
        class="text-xs text-white font-medium px-3 py-2 rounded-md bg-blue-500 flex-1 transition-colors focus:outline-none hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
      >
        Install
      </button>
      <button
        id="pwa-dismiss-button"
        class="text-xs text-gray-700 font-medium px-3 py-2 rounded-md bg-gray-200 flex-1 transition-colors dark:text-gray-300 focus:outline-none dark:bg-gray-700 hover:bg-gray-300 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:hover:bg-gray-600"
      >
        Later
      </button>
    </div>
  </div>
</div>

<script>
  // PWA Install functionality - only for /app routes
  let deferredPrompt = null;
  const installPrompt = document.getElementById('pwa-install-prompt');
  const installButton = document.getElementById('pwa-install-button');
  const dismissButton = document.getElementById('pwa-dismiss-button');

  // Only show PWA install on /app routes
  const isAppRoute = () => window.location.pathname.startsWith('/app');

  // Listen for the beforeinstallprompt event
  window.addEventListener('beforeinstallprompt', (e) => {
    // Only handle PWA install on /app routes
    if (!isAppRoute()) return;

    // Prevent the mini-infobar from appearing on mobile
    e.preventDefault();
    // Stash the event so it can be triggered later
    deferredPrompt = e;
    // Show our custom install prompt
    if (installPrompt) {
      installPrompt.classList.remove('hidden');
    }
  });

  // Handle install button click
  if (installButton) {
    installButton.addEventListener('click', async () => {
      if (!deferredPrompt || !isAppRoute()) return;

      // Show the install prompt
      deferredPrompt.prompt();

      // Wait for the user to respond to the prompt
      const { outcome } = await deferredPrompt.userChoice;
      console.log(`User response to the install prompt: ${outcome}`);

      // Clear the deferredPrompt for next time
      deferredPrompt = null;

      // Hide the install prompt
      if (installPrompt) {
        installPrompt.classList.add('hidden');
      }
    });
  }

  // Handle dismiss button click
  if (dismissButton) {
    dismissButton.addEventListener('click', () => {
      if (installPrompt) {
        installPrompt.classList.add('hidden');
      }
    });
  }

  // Listen for the appinstalled event
  window.addEventListener('appinstalled', () => {
    console.log('PWA was installed');
    if (installPrompt) {
      installPrompt.classList.add('hidden');
    }
    deferredPrompt = null;
  });

  // Hide the prompt if not on /app route or if the app is already installed or running in standalone mode
  if (!isAppRoute() || window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone) {
    if (installPrompt) {
      installPrompt.classList.add('hidden');
    }
  }

  // Hide/show prompt when navigating between routes
  document.addEventListener('astro:page-load', () => {
    if (installPrompt) {
      if (isAppRoute() && deferredPrompt) {
        installPrompt.classList.remove('hidden');
      } else {
        installPrompt.classList.add('hidden');
      }
    }
  });
</script>
