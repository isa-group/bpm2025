---
import type { UnresolvedImageTransform } from 'astro';
import { getImage } from 'astro:assets';

import type { Brands as Props } from '#/types';
import Headline from '#/components/ui/Headline.astro';
import WidgetWrapper from '#/components/ui/WidgetWrapper.astro';

const {
  title = '',
  subtitle = '',
  tagline = '',
  icons = [],
  images = [],
  description = false,
  image_footer = true,
  id,
  isDark = false,
  classes = {},
  bg
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="flex flex-wrap gap-x-6 justify-center lg:gap-x-24 sm:gap-x-12">
    {icons && icons.map(iconClass => <div class={`${iconClass} mx-auto h-auto w-12 py-3 text-gray-500 sm:mx-0 lg:py-5`} />)}
    {
      images
      && images.map(
        async (image) => {
          const { src, attributes } = await getImage(image as UnresolvedImageTransform);

          for (const key of ['width', 'height', 'href', 'description']) {
            delete attributes[key];
          }

          return (
            <div class="my-2 px-3 py-1 rounded-md flex col-span-1 justify-center lg:my-4">
              <div class="flex flex-wrap items-center justify-center lg:flex-nowrap">
                <a class="gap-10 min-w-sm" href={image.href} target="_blank">
                  <div class="flex flex-col items-center justify-center">
                    <img
                      class={`max-h-20 rounded-xs dark:bg-white ${image.class ?? ''}`}
                      src={src}
                      {...attributes}
                    />
                    {image.alt && image_footer && <p class="text-lg font-semibold">{image.alt}</p>}
                  </div>
                </a>
                {description && image.description
                  && (
                    <div>
                      <h3 class="text-lg font-semibold">â€” {image.alt}</h3>
                      <blockquote class="text-lg text-muted font-serif font-oblique" set:html={image.description} />
                    </div>
                  )}
              </div>
            </div>
          );
        }
      )
    }
  </div>
</WidgetWrapper>
